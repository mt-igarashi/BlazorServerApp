@page "/parts/date"
@using System.Globalization;
@using Microsoft.AspNetCore.Components.Forms;
@using BlazorApp.Components
@using BlazorApp.Helpers;
@inherits BlazorAppComponent

開始日:<InputDate @bind-Value="FromDate" @oninput="OnFromDateChanged" />&nbsp;
終了日:<InputDate @bind-Value="ToDate" @oninput="OnToDateChanged"/>

@code {
    [Parameter]
    public EditContext EditContext { get; set; }

    [Parameter]
    public string FromName { get; set; }

    [Parameter]
    public DateTime? FromDate { get; set; }
    
    [Parameter]
    public string ToName { get; set; }

    [Parameter]
    public DateTime? ToDate { get; set; }

    [Parameter]
    public EventCallback<DateTime?> FromDateChanged { get; set; }

    [Parameter]
    public EventCallback<DateTime?> ToDateChanged { get; set; }

    public async Task OnFromDateChanged(ChangeEventArgs args)
    {
        DateTime date;
        var success = DateTime.TryParseExact(args.Value.ToString(), "yyyy-MM-dd", CultureInfo.CurrentCulture, DateTimeStyles.None, out date);
        await FromDateChanged.InvokeAsync(success ? date : null);
        if (EditContext is not null)
        {
            EditContextHelper.NotifyFieldChanged(EditContext, FromName);
        }
    }

    public async Task OnToDateChanged(ChangeEventArgs args)
    {
        DateTime date;
        var success = DateTime.TryParseExact(args.Value.ToString(), "yyyy-MM-dd", CultureInfo.CurrentCulture, DateTimeStyles.None, out date);
        await ToDateChanged.InvokeAsync(success ? date : null);
        if (EditContext is not null)
        {
            EditContextHelper.NotifyFieldChanged(EditContext, ToName);
        }
    }
}